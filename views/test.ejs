<!DOCTYPE html>

<html>

<head>

    <title>
        Test
    </title>

    <%- include('./partials/styles'); %>
        <!-- External css-->
        <link rel="stylesheet" href="/css/test.css">

        <link rel="stylesheet"
            href="//cdnjs.cloudflare.com/ajax/libs/highlight.js/11.5.0/styles/monokai-sublime.min.css">
        <script src="//cdnjs.cloudflare.com/ajax/libs/highlight.js/11.5.0/highlight.min.js"></script>
        <script src="//code.jquery.com/jquery-3.6.0.min.js"></script>

        <link href="//cdn.quilljs.com/1.3.6/quill.bubble.css" rel="stylesheet">
        <!-- Main Quill library -->
        <script src="//cdn.quilljs.com/1.3.6/quill.min.js"></script>
</head>

<body>
    <nav class="navbar navbar-expand-lg navbar-dark bg-dark p-2 ps-3">
        <div class="container-fluid">
            <div class="d-flex justify-content-start">
                <a class="navbar-brand my-auto" href="#">
                    <img src="/svg/logo.svg" alt="logo" width="120">
                </a>
                <div class="ms-5">
                    <h4 class="text-light">
                        <%= subjectTitle %>
                    </h4>
                    <h6 class="text-light">Test id: <%= testId %>
                    </h6>
                </div>

            </div>
            <div class="d-flex justify-content-center w-25">
                <div class="">
                    <i class="fa-solid fa-hourglass text-light"></i>
                    <span id="timer" class="text-white">
                    </span>
                </div>
            </div>
            <!--  -->
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse"
                data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false"
                aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse justify-content-end" id="navbarSupportedContent">

                <div class="d-flex">

                    <button class="btn text-white" type="submit"><i
                            class="fa-solid fa-arrow-right-from-bracket text-white"></i>
                        Exit</button>
                </div>
            </div>

            <!--  -->
        </div>
    </nav>
    <section id="body-color">
        <div class="container-fluid px-4 ">
            <div class="row  my-3">
                <div class="col-lg-9 shadow-sm bg-white ">
                    <div class="row justify-content-center p-3">
                        <p class="pe-4"
                            style="line-height:19px; font-weight:500; font-size:15px; color:rgb(49, 46, 46); width: 95%;"
                            id="editorDisplay">
                            <%= firstdata.title %>
                        </p>
                        <i class="fa-solid fa-volume-high my-auto" style="width: 5%;" id="tts"
                            onclick="speak(editorDisplay);"></i>
                    </div>
                    <div class="row mt-5 justify-content-center">
                        <div class="row">
                            <div class="col-md-6">
                                <input type="checkbox" name="option" id="option1" onclick="onlyOne(this)" />
                                <label for="option1" id="optionEditor1">Disabled checkbox</label>
                            </div>
                            <div class="col-md-6">
                                <input type="checkbox" name="option" id="option2" onclick="onlyOne(this)" />
                                <label for="option2" id="optionEditor2"></label>
                            </div>
                            <div class="col-md-6">
                                <input type="checkbox" name="option" id="option3" onclick="onlyOne(this)" />
                                <label for="option3" id="optionEditor3"></label>
                            </div>
                            <div class="col-md-6">
                                <input type="checkbox" name="option" id="option4" onclick="onlyOne(this)" />
                                <label for="option4" id="optionEditor4"></label>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-lg-3 shadow-sm bg-white ">
                    <!------  -->
                    <div class="row">
                        <h6 class="m-2">Questions</h6>
                        <div class=" row ans-status">
                            <div class="col ms-0"><i class="fa-solid fa-square ms-0" style="color:#A0E6B7"></i>Answered
                            </div>
                            <div class="col ms-0"><i class="fa-solid fa-square ms-0"
                                    style="color:#F7B2B2"></i>Unanswered
                            </div>
                            <div class="col ms-0"><i class="fa-solid fa-square ms-0" style="color:#B9B5F6"></i>Review
                                Later
                            </div>
                        </div>
                        <div class=" scroll-bg">
                            <div class="row scroll-div">
                                <div class="row m-auto mt-3  ">
                                    <div class="">
                                        <% for( let index=0; index < total; index++ ) { %>
                                            <button type="button" class="btn  btn-circle m-1"
                                                style="background-color:#F7B2B2" onclick="buttonclick(this)"
                                                value="<%= moreQuestion[index].questionId %>">
                                                <%= index+1 %>
                                            </button>
                                            <% } %>
                                    </div>
                                </div>

                            </div>
                        </div>
                        <div class="row  m-auto">
                            <div class="col">
                                <div class="mb-3">
                                    <button class="btn btn-for-view shadow px-2" onclick="saveandprevious()">Save
                                        &
                                        prev.</button>
                                </div>
                            </div>
                            <div class="col">
                                <div class=" mb-3">
                                    <button class="btn btn-for-view shadow px-2" onclick="reviewLater()"
                                        id="reviewBtn">Review
                                        Later</button>
                                </div>
                            </div>
                            <div class="col">
                                <div class=" mb-3">
                                    <button class="btn btn-for-view shadow px-2" onclick="saveandnext()">Save &
                                        next</button>
                                </div>
                            </div>
                        </div>
                    </div>
                    <!------ end questions -->
                    <!------  -->
                    <div class="row">
                        <h6 class="m-2">Rough Work</h6>
                        <textarea name="" id="" cols="30" rows="10"></textarea>
                    </div>
                    <!------ end questions -->
                </div>
            </div>
            <div class="row">
                <div class="col-lg-9 shadow-sm bg-white">

                </div>

            </div>

        </div>
    </section>

    <script>
        function speak(params) {
            let text = $('#editorDisplay').text()
            window.speechSynthesis.speak(new SpeechSynthesisUtterance(text));
        }
    </script>

    <script>
        hljs.configure({
            languages: ['javascript', 'ruby', 'python']
        });

        let options = {
            modules: {
                syntax: true,
            },
            readOnly: true,
            theme: 'bubble'

        };
        let quillDisplay = new Quill('#editorDisplay', options);
        let quillOption1 = new Quill('#optionEditor1', options);
        let quillOption2 = new Quill('#optionEditor2', options);
        let quillOption3 = new Quill('#optionEditor3', options);
        let quillOption4 = new Quill('#optionEditor4', options);
    </script>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"
        integrity="sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p"
        crossorigin="anonymous"></script>


    <script>
        $(document).ready(function () {
            $('#reviewBtn').prop('disabled', true);
            $(`button[value="${localStorage.getItem('currentQuesId')}"]`).addClass("activeques");
            let buttonclr = JSON.parse(localStorage.getItem("selectedAnswers") || "[]");
            buttonclr.forEach(function (checkbox) {
                try {
                    if (checkbox.id === localStorage.getItem('currentQuesId')) {
                        $("input[value='" + checkbox.choice + "']").prop('checked', true);
                        if (checkbox.review == 1) {
                            $('#reviewBtn').prop('disabled', true);
                        }
                    }

                    if (checkbox.review == 1) {
                        document.querySelector(`button[value="${checkbox.id}"]`).style.backgroundColor = '#B9B5F6';
                    } else {
                        document.querySelector(`button[value="${checkbox.id}"]`).style.backgroundColor = '#A0E6B7';
                    }
                } catch {
                    //
                }
            });
        });

        const reviewLater = () => {
            let reviewLater = JSON.parse(localStorage.getItem("selectedAnswers") || "[]");
            reviewLater.forEach(function (checkbox) {
                try {
                    if (checkbox.id === localStorage.getItem('currentQuesId')) {
                        checkbox.review = 1;
                        document.querySelector(`button[value="${checkbox.id}"]`).style.backgroundColor = '#B9B5F6';
                        $('#reviewBtn').prop('disabled', true);
                    }
                } catch {
                    //
                }
                localStorage.setItem("selectedAnswers", JSON.stringify(reviewLater));
            });
        }

        const saveandnext = () => {
            $("button.btn.btn-circle.m-1.activeques").next().click();
        }
        const saveandprevious = () => {
            $("button.btn.btn-circle.m-1.activeques").prev().click();
        }
    </script>
    <script>
        localStorage.setItem('currentQuesId', `<%- firstdata.questionId %>`)
        //First Question
        quillDisplay.root.innerHTML = `<%- firstdata.question %>`;
        quillOption1.root.innerHTML = `<%- firstdata.options[0] %>`;
        quillOption2.root.innerHTML = `<%- firstdata.options[1] %>`;
        quillOption3.root.innerHTML = `<%- firstdata.options[2] %>`;
        quillOption4.root.innerHTML = `<%- firstdata.options[3] %>`;

        document.getElementById('option1').value = `<%- firstdata.options[0] %>`;
        document.getElementById('option2').value = `<%- firstdata.options[1] %>`;
        document.getElementById('option3').value = `<%- firstdata.options[2] %>`;
        document.getElementById('option4').value = `<%- firstdata.options[3] %>`;

        //Timer left
        var end = new Date('<%= timer %>');

        var _second = 1000;
        var _minute = _second * 60;
        var _hour = _minute * 60;
        var _day = _hour * 24;
        var timer;

        function showRemaining() {
            var now = new Date();
            var distance = end - now;
            if (distance < 0) {
                clearInterval(timer);
                document.getElementById('timer').innerHTML = 'EXPIRED!';
                return;
            }
            var hours = Math.floor((distance % _day) / _hour);
            var minutes = Math.floor((distance % _hour) / _minute);
            var seconds = Math.floor((distance % _minute) / _second);

            document.getElementById('timer').innerHTML = hours + ':';
            document.getElementById('timer').innerHTML += minutes + ':';
            document.getElementById('timer').innerHTML += seconds + ' left';
        }
        timer = setInterval(showRemaining, 1000);


    </script>
    <script src="/js/exam.js"></script>
</body>

</html>